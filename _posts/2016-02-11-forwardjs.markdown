---
layout: post
title: "Forwardjs"
date: 2016-02-11T17:55:29-08:00
---

# Forward 4 Web Technology Summit

> FORWARD IS AN INITIATIVE TO HELP BRING THE WEB, WELL, FORWARD.

###  Themes

* Inclusivity instead of diversity
* Cyberpunk - life imitating art?
* Why do they want to put JavaScript everywhere?
* It seems that the JS community struggles to learn from history

### Favorite Quotes

* Unix did it
* Don't let your friends build auth

## Embedded JS: Advances in NodeBots and the Future
KASSANDRA PERCH

The NodeBots community and ecosystem is thriving and at this point you
can get small < $20 [microcontrollers](https://store.particle.io/) that can
run C generated by NodeJS, or an [SoC](http://www.espruino.com/) that runs JS natively.

I have little interest in embedded nodejs, so I didn't put a lot of
effort into retaining any of this talk. But, she did have a neat
tech demo, where you could tweet to an account to push a color value to
a queue that would display on her sweater or belt.

## Keynote
DOUGLAS CROCKFORD

For me, this was the most intriguing talk. It's always joked about how
broken web technologies are, kluge on top of kluge. He recognized
that trying to fix that has been attempted, I believe he was referring
to technologies like Flash and Silverlight. He then looked to a previous
technological leap of something widely adopted: analog to digital TV.

The main difference between the approaches used had been who the focus
for adoption was. Web technologies are always marketed to the developer,
if you can get enough developers making enough stuff, then the consumers
will catch on. In the case of switching from analog to digital, the
government ensured that the consumer was the focus. Broadcasters and
producers had to foot the bill of upgrading equipment. Consumers were
given free to cheap boxes and it was ensured that when the analog
signals stopped, nobody would notice.

#### Plan for Adoption

1 Get one browser to ship his new helper app extension
2 Get one security minded business, ie a bank, to adopt the new protocol
and browser extension, and in turn force their customers to use it
3 Other businesses will want the added security benefit
4 Other Browsers will be forced to begin shipping the new extension

The browser helper app would be invisible to the end user.

## "re.flow",Â­ an interactive digital work by Jason Marsh
JASON MARSH

I kind of regret going to this talk. It was a tech demo of Dolby's new
web audio codec that can process 3 dimensional sound sources. He put
together a sound sequencer and a very 80's style techno-porn. Each node
on the sequencer corresponded to a shader that would move in sync with
it's corresponding sound source.

## Algorithmic Art and JavaScript
COLE WILLSEA

For the first half, they presented algorithms that either created or
were themselves an art piece. Some notable names: Sol Lewitt, John Cage,
and Brian Gyson. If you write an algorithm for creating a piece, which
part is the artwork?

The second half was a series of twitter bots mostly written by them. One
was would record all the emojis tweeted in SF in the last hour and
tweet a basic emoji graph. I hadn't heard of @everyword, but someone
wrote a bot to tweet everyword in the dictionary. Of course, there is
now an @everyjs, set in motion to name every JS library before it
happens.

## Functional Programming Panel
BRIAN LONSDORF
PHIL FREEMAN
EVAN CZAPLICKI
LEE BYRON
MARSHALL UPSHUR

Thispanel was made up of prominent functional JavaScript developers, but
I only recognized the tech used, and even then, mostly only with a
familiarity: Elm, ClojureScript, Immutable.js, PureScript etc. They
spent only a small portion talking about what separates functional
programming from other paradigms, so I'm still left wondering what the
hell a monad is and what they're for. But of course, they all 'get' it.

The usually reasons for choosing functional languages were listed as
simplicity, composability, and immutability. Along with a powerful type
system, these make it easy to reason or even prove the correctness of
your program. It is mentioned that React shares similar principles and
it's success can be attributed to those.

Mostly, the subject kept getting back towhere functional programming
will fit into the web and their experience with fitting it in. In a
professional setting, the road to change is through small incremental
steps. But, for personally development, there can be choices. Do you
instead immerse yourself in something new?

#### Other thoughts

* JavaScript is always going to be a target language, by virtue of it
having to be everything to everyone.

* JS culture seems to be one where everyone takes things are remakes it
as their own. This is good for learning and including people, but it
also contributes to the fragmentation.

## Soylent Bits
MYLES BORINS

### Things People Hate

* languages
* frameworks
* each other
* women
* minorities

He is an active contributer to Node.js and gave a retrospective on a
recent OSS organizational debacle. I believe I heard a whiff of this on
HN and reddit, but it had a dramatic impact on this guys life.

IIRC he started a Github issue discuss removing the term 'suicide' from
Node's workers. This brought the trolls out from under the bridge. At
the time, Node had a code of conduct, but lacked any rules of
moderation. That is to say, they had no way to enforce it. So, while
people are trolling on one thread, there's another thread with the Node
maintainers disagreeing about what to do about it. 

Your code is made of people. 

## The New 'Desktop': Electron, React, and Pixel-Perfect Native-Feeling Experiences
EVAN MORIKAWA

I spent this entire talk wondering why you would write desktop apps with
web tools.

Electron is essentially a version of chromium that uses Node.js as the
JS engine. This gives you access to all the local-filesystem API's.
Evan's company wrote a native feeling e-mail client with it. It uses
sqlite to handle offline caching of your e-mail actions.

## Build the Virtual Reality Web with A-Frame
KEVIN NGO

mozvr appears to be mozilla's contribution to VR. A few of the
developers on the project were there and they seem to be taking a rushed
but waiting approach. They've built a library that wraps around WebVR.
With a few markup tags, you can render textured primitive shapes in a 3D
environment. They use an entity-component system. Entities would be
physical objects with no other attributes and can have any number of
components mixed in.

With headsets about to come to market and the entire tech so new, these
guys don't want to commit to any large design decisions until the
ecosystem evolves. The current state of mozvr abstracts away webgl and
VR programming. Their goal of course, is to make VR appealing to web
developers.

## The Economy of Keystrokes
KYLE SIMPSON

Having now seen him twice, I highly recommend attending a talk by him.
His points are simple, because he presents them clearly. 

### Concepts

* What does each keystroke, or lack of keystroke, buy you? 
* Code is a suggestion
* Code is a means of communication
* Good programmers write code that humans can understand
* users > author > ...
* reader > writer

He argues that the main currency of keystrokes is readability. 
